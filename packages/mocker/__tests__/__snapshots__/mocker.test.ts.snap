// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`mocker > fragments > fragment with default data 1`] = `
{
  "id": 1234,
  "make": "whose nor",
}
`;

exports[`mocker > fragments > fragment with default data and fieldGenerator 1`] = `
{
  "id": 1234,
  "make": "Acura",
}
`;

exports[`mocker > fragments > fragment with default data and fieldGenerator with array of values 1`] = `
{
  "car": {
    "id": 1234,
  },
  "id": 1234,
  "name": "whose nor",
  "pets": [
    {
      "id": 1234557,
      "name": "imperfect offensively thwack",
    },
    {
      "id": 99999,
      "name": "Bob",
    },
  ],
}
`;

exports[`mocker > fragments > fragment with enum values (with provided enum value that doesn't match, this should throw) 1`] = `[Error: Trying to mock Breed with enum value SHARK does not match known enum values "[SHEPARD,BULLDOG,POODLE,GERMAN_SHEPHERD,LABRADOR_RETRIEVER,GOLDEN_RETRIEVER]"]`;

exports[`mocker > fragments > fragment with enum values (with provided enum value) 1`] = `
{
  "breed": "SHEPARD",
  "id": 1234,
}
`;

exports[`mocker > fragments > fragment with union values 1`] = `
{
  "id": 1234,
  "make": "whose nor",
  "owner": {
    "id": 1234,
    "name": "tie",
  },
}
`;

exports[`mocker > mutations > should work with basic mutation (no overrides) 1`] = `
{
  "createPet": {
    "__typename": "Pet",
    "id": 1234,
    "name": "whose nor",
  },
}
`;

exports[`mocker > queries > should work with basic query (no overrides) 1`] = `
{
  "car": {
    "__typename": "Car",
    "id": 1234,
    "make": "Italian Car",
    "model": "whose nor",
  },
}
`;
